{"ast":null,"code":"var _jsxFileName = \"/Users/williamchan/Documents/side_projects/auto-send/client/src/components/information/Information.js\";\nimport { Dialog, Divider, Button, DialogTitle, DialogContent, DialogActions, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { CustomCard, Title, Text, HelpDialog } from \"./Materials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Information = props => {\n  const description = ` To get started make sure you input an email subject, the list of recipients, and the message you want to send.\n     \n     Field Information:\n     - Recipients represents the emails of the people you want to send to\n     - Names represents the names of the people you want to send to\n     - Positions represents the positions that the people applied for\n     \n     How to fill out fields\n     - If you plan to bcc/cc more than one person, make sure to separate their emails by a comma \n     (Example: jane.doe@gmail.com, testing@gmail.com)\n  \n     - Recipients, names, and position should also be separated by a comma if there are several people. Make sure you list them out in the same order\n     (Example:\n      Recipients: jane.doe@gmail.com, john@gmail.com\n      Names: Jane, John\n      Position: Cookie, Monster)`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"px-2\",\n    children: /*#__PURE__*/_jsxDEV(HelpDialog, {\n      open: props.open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Guide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          background: '#9CA3AF'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          whiteSpace: 'pre-line'\n        },\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Information;\nexport default Information;\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["/Users/williamchan/Documents/side_projects/auto-send/client/src/components/information/Information.js"],"names":["Dialog","Divider","Button","DialogTitle","DialogContent","DialogActions","Typography","React","CustomCard","Title","Text","HelpDialog","Information","props","description","open","background","whiteSpace"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,aAA/C,EAA8DC,aAA9D,EAA6EC,UAA7E,QAA+F,mBAA/F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,UAAlC,QAAoD,aAApD;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,WAAW,GAChB;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAhBI;AAiBA,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,IAAI,EAAED,KAAK,CAACE,IAAxB;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE;AAAb,SAAtB;AAAgD,QAAA,QAAQ,MAAxD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAA,oBAA0BH;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eASI,QAAC,aAAD;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArCD;;KAAMF,W;AAuCN,eAAeA,WAAf","sourcesContent":["import { Dialog, Divider, Button, DialogTitle, DialogContent, DialogActions, Typography } from '@material-ui/core';\nimport React from 'react'\nimport { CustomCard, Title, Text, HelpDialog } from \"./Materials\";\n\nconst Information = (props) => {\n    const description = \n    ` To get started make sure you input an email subject, the list of recipients, and the message you want to send.\n     \n     Field Information:\n     - Recipients represents the emails of the people you want to send to\n     - Names represents the names of the people you want to send to\n     - Positions represents the positions that the people applied for\n     \n     How to fill out fields\n     - If you plan to bcc/cc more than one person, make sure to separate their emails by a comma \n     (Example: jane.doe@gmail.com, testing@gmail.com)\n  \n     - Recipients, names, and position should also be separated by a comma if there are several people. Make sure you list them out in the same order\n     (Example:\n      Recipients: jane.doe@gmail.com, john@gmail.com\n      Names: Jane, John\n      Position: Cookie, Monster)`\n    return (\n        <div class=\"px-2\">\n            <HelpDialog open={props.open}>\n                <DialogTitle>\n                    Guide\n                </DialogTitle>\n                <Divider style={{background: '#9CA3AF'}}/>\n                <DialogContent style={{whiteSpace: 'pre-line'}} dividers>\n                    <Typography gutterBottom>{description}</Typography>\n                </DialogContent>\n                \n                <DialogActions>\n                    <Button>\n                        Close\n                    </Button>\n                </DialogActions>\n            </HelpDialog>\n        </div>\n    )\n}\n\nexport default Information\n"]},"metadata":{},"sourceType":"module"}