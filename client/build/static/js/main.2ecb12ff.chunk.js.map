{"version":3,"sources":["contexts/UserProfile.js","components/home/Materials.js","http-common.js","services/EmailService.js","components/home/Home.js","components/email/Materials.js","components/email/Email.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","React","createContext","Title","withStyles","root","color","Typography","LoginTextField","borderColor","TextField","LoginButton","backgroundColor","width","Button","ErrorDialog","Dialog","axios","create","baseURL","headers","emailContent","a","http","post","credentials","Home","history","useHistory","useContext","setProfile","useState","loading","setLoading","openError","setOpenError","usernameRef","createRef","passwordRef","openErrorDialog","useEffect","setTimeout","class","open","DialogTitle","DialogContent","gutterBottom","DialogActions","onClick","bind","noValidate","autoComplete","variant","ref","label","fullWidth","type","Link","href","display","target","rel","email","current","children","value","password","EmailService","authenticateEmail","data","push","CircularProgress","size","InputField","CustomCard","height","borderRadius","Card","ActionButton","EmailPreview","CardContent","Text","HelpIcon","marginLeft","marginBottom","Help","HelpDialog","PromptDialog","CredentialsDialog","Email","profile","openPrompt","setOpenPrompt","openCredentials","setOpenCredentials","errorMessage","setErrorMessage","subjectRef","ccRef","bccRef","recipientsRef","namesRef","positionsRef","messageRef","previewRef","helpOpen","setHelpOpen","openHelpDialog","closeErrorDialog","closePromptDialog","closeCredentialsDialog","goBack","Divider","style","background","whiteSpace","dividers","paragraph","required","onChange","name","split","position","message","replace","innerText","multiline","rows","subject","recipients","sendEmail","JSON","stringify","error","App","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ecb12ff.chunk.js","sourcesContent":["import React from 'react';\n\nconst UserProfile = React.createContext([{}, () => {}]);\n\nexport default UserProfile;","import { Typography, Button, TextField, Dialog } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Title = withStyles({\n    root: {\n      color: \"#7C3AED\"\n    }\n  })(Typography);\n\nconst LoginTextField = withStyles({\n    root: {\n      '& label.Mui-focused': {\n        color: '#7C3AED',\n      },\n      '& .MuiOutlinedInput-root': {\n\n        '& .MuiOutlinedInput-input':{\n          color: '#D1D5DB',\n        },\n        '& fieldset': {\n          borderColor: '#9CA3AF',\n        },\n        '&:hover fieldset': {\n          borderColor: '#D1D5DB',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#7C3AED',\n        },\n        \n      },\n      '& .MuiInputLabel-root': {\n        color: '#D1D5DB'\n      }\n\n    },\n  })(TextField);\n\nconst LoginButton = withStyles({\n    root:{\n      backgroundColor: '#7C3AED',\n      color: '#D1D5DB',\n      width: '100 px',\n\n      '&:hover':{\n        backgroundColor:'#4C1D95'\n      },\n    },\n  })(Button)\n\nconst ErrorDialog = withStyles({\n  root: {\n    \"& .MuiDialog-paper\":{\n      backgroundColor: \"#242424\",\n      color: \"#D1D5DB\",\n      width: \"50%\",\n    }\n  }\n})(Dialog);\n\nexport {\n    Title,\n    LoginTextField,\n    LoginButton,\n    ErrorDialog\n};","import axios from \"axios\"\n\nexport default axios.create({\n    baseURL: \"\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n})","import { resolveContent } from \"nodemailer/lib/shared\";\nimport http from \"../http-common\";\n\nclass EmailService {\n\n    async sendEmail(emailContent){\n        return await http.post('/send', emailContent)\n    }\n\n    async authenticateEmail(credentials){\n        return await http.post('/authenticate', credentials)\n    }\n}\nexport default new EmailService;\n\n\n\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorDialog, Title, LoginTextField, LoginButton } from \"./Materials\";\nimport {\n  CircularProgress,\n  Link,\n  Typography,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport UserProfile from \"../../contexts/UserProfile\";\nimport EmailService from \"../../services/EmailService\";\n\nconst Home = () => {\n  const history = useHistory();\n  const [profile, setProfile] = useContext(UserProfile);\n  const [loading, setLoading] = useState(true);\n  const [openError, setOpenError] = useState(false);\n  const usernameRef = React.createRef();\n  const passwordRef = React.createRef();\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 700);\n  },[])\n\n  function handleClick() {\n    let credentials = {\n      email: usernameRef.current.children[1].children[0].value,\n      password: passwordRef.current.children[1].children[0].value,\n    };\n    setProfile(credentials);\n\n    (async () => {\n      setLoading(true)\n      const authenticated = await EmailService.authenticateEmail(credentials);\n\n      if (authenticated.data) {\n        history.push(\"/email\");\n      } else {\n        setLoading(false)\n        openErrorDialog();\n      }\n    })();\n  }\n\n  function openErrorDialog() {\n    setOpenError(!openError);\n  }\n\n  return (\n    <div class=\"h-full\">\n      <ErrorDialog open={openError}>\n        <DialogTitle>Error</DialogTitle>\n        <DialogContent>\n          <Typography gutterBottom>\n            To ensure your login in succeeds, make sure you click both links under password to enable this \n            app to access your account. Otherwise, you input an incorrect email or password, please try again.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={openErrorDialog.bind(this)}>\n            Close\n          </Button>\n        </DialogActions>\n      </ErrorDialog>\n      {loading === false ? (\n        <form\n          class=\"h-full flex flex-wrap content-center justify-center flex-col\"\n          noValidate\n          autoComplete=\"off\"\n        >\n          <div class=\"text-center\">\n            <Title variant=\"h2\">AutoSend</Title>\n          </div>\n          <div class=\"w-96 mt-5\">\n            <LoginTextField\n              ref={usernameRef}\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth={true}\n            />\n          </div>\n          <div class=\"w-96 mt-3\">\n            <LoginTextField\n              ref={passwordRef}\n              type=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth={true}\n            />\n            <div>\n              <div class=\"mt-2\">\n                \n           \n                <Link href=\"https://myaccount.google.com/lesssecureapps?pli=1&rapt=AEjHL4MIyWKmQ1ug7ushrtZw2yrOZlFb1dJpsRFiPQGG_W1gjS8piN8qOxuKwJ8qObblHI3UfsVSQ9hPjxX27hFq9zHbM64Lfg\" display=\"block\" target=\"_blank\" rel=\"noopener\">Turn on Less Secure Apps</Link>\n    \n                <Link href=\"https://accounts.google.com/b/0/DisplayUnlockCaptcha\" display=\"block\" target=\"_blank\" rel=\"noopener\">Unlock Captcha</Link>\n            \n               \n  \n              </div>\n            </div>\n          </div>\n          <div class=\"w-96 relative text-right bottom-10\">\n            <LoginButton onClick={handleClick.bind()} variant=\"contained\">\n              Login\n            </LoginButton>\n          </div>\n        </form>\n      ) : (\n        <div class=\"h-full flex flex-wrap content-center justify-center\">\n          <CircularProgress size={100} />\n        </div>\n        \n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { withStyles } from \"@material-ui/core/styles\";\nimport { Button, TextField, Card, CardContent, Typography, Dialog } from \"@material-ui/core\";\nimport Help from \"@material-ui/icons/Help\";\n\nconst InputField = withStyles({\n    root: {\n      \"& label.Mui-focused\": {\n        color: \"#7C3AED\",\n      },\n\n      \"& .MuiOutlinedInput-root\": {\n        \"& .MuiOutlinedInput-input\": {\n          color: \"#D1D5DB\",\n        },\n        \"& fieldset\": {\n          borderColor: \"#9CA3AF\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#D1D5DB\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#7C3AED\",\n        },\n        \"&.Mui-disabled fieldset\": {\n            borderColor: \"#9CA3AF\",\n        },\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"#D1D5DB\",\n      },\n      \n    },\n  })(TextField);\n\n  const CustomCard = withStyles({\n    root: {\n      backgroundColor: \"#242424\",\n      height: \"100%\",\n      borderRadius: \"15 px\",\n    },\n  })(Card);\n\n  const ActionButton = withStyles({\n    root: {\n      backgroundColor: \"#7C3AED\",\n      color: \"#D1D5DB\",\n      width: \"100 px\",\n\n      \"&:hover\": {\n        backgroundColor: \"#4C1D95\",\n      },\n    },\n  })(Button);\n\n  const Title = withStyles({\n    root: {\n      color: \"#7C3AED\"\n    }\n  })(Typography);\n\n  const EmailPreview = withStyles({\n      root: {\n          height: \"100%\",\n      }\n  })(CardContent);\n\n  const Text = withStyles({\n    root: {\n        color: \"#D1D5DB\"\n    }\n    })(Typography);\n  \n  const HelpIcon = withStyles({\n    root: {\n      color:\"#D1D5DB\",\n      marginLeft: \"5px\",\n      marginBottom: \"5px\",\n    }\n  })(Help);\n\n  const HelpDialog = withStyles({\n    root: {\n      \"& .MuiDialog-paper\":{\n        backgroundColor: \"#242424\",\n        color: \"#D1D5DB\",\n      }\n    }\n  })(Dialog);\n\n  const ErrorDialog = withStyles({\n    root: {\n      \"& .MuiDialog-paper\":{\n        backgroundColor: \"#242424\",\n        color: \"#D1D5DB\",\n        width: \"50%\",\n      }\n    }\n  })(Dialog);\n\n\n  const PromptDialog = withStyles({\n    root: {\n      \"& .MuiDialog-paper\":{\n        backgroundColor: \"#242424\",\n        color: \"#D1D5DB\",\n        width: \"50%\",\n      }\n    }\n  })(Dialog);\n\n  const CredentialsDialog = withStyles({\n    root: {\n      \"& .MuiDialog-paper\":{\n        backgroundColor: \"#242424\",\n        color: \"#D1D5DB\",\n        width: \"50%\",\n      }\n    }\n  })(Dialog);\n\n  export {\n      InputField,\n      CustomCard,\n      ActionButton,\n      Title,\n      Text,\n      HelpIcon,\n      EmailPreview,\n      HelpDialog,\n      ErrorDialog,\n      PromptDialog,\n      CredentialsDialog\n  }","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  CircularProgress,\n  CardContent,\n  Divider,\n  Typography,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport {\n  InputField,\n  CustomCard,\n  ActionButton,\n  Title,\n  Text,\n  EmailPreview,\n  HelpIcon,\n  HelpDialog,\n  ErrorDialog,\n  PromptDialog,\n  CredentialsDialog\n} from \"./Materials\";\nimport EmailService from \"../../services/EmailService\";\nimport UserProfile from \"../../contexts/UserProfile\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Email = () => {\n  const history = useHistory();\n\n  const [profile, setProfile] = useContext(UserProfile);\n  const [openError, setOpenError] = useState(false);\n  const [openPrompt, setOpenPrompt] = useState(false);\n  const [openCredentials, setOpenCredentials] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const subjectRef = React.createRef();\n  const ccRef = React.createRef();\n  const bccRef = React.createRef();\n  const recipientsRef = React.createRef();\n  const namesRef = React.createRef();\n  const positionsRef = React.createRef();\n  const messageRef = React.createRef();\n  const previewRef = React.createRef();\n  const [helpOpen, setHelpOpen] = useState(false);\n\n  const intro = ` To get started make sure you input an email subject, the list of recipients, and the message you want to send.`;\n\n  const fieldInfoTitle = \"Field Information\";\n  const fieldInfoDesc = `- Recipients represent the emails of the people you want to send to\n  - Names represents the names of the people you want to send to\n  - Positions represents the positions that the people applied for`;\n\n  const howTitle = \"Filling out Fields:\";\n  const howDesc = `- BCC, CC, Recipients, Names, and position should be separated by a comma if there are several people. Make sure you list them out in the same order\n  (Example:\n   Recipients: jane.doe@gmail.com, john@gmail.com\n   Names: Jane, John\n   Position: Cookie, Monster)\n   \n   - If you want to personalize your emails, be sure to input a name and/or the position the person applied to and fill out the message input using {name} and {position} variables to indicate where you want their names/position to be\n   (Example:\n    Message: Hi {name}, thanks for applying to {position}!)`;\n\n  let emailContent = {};\n\n  useEffect(() => {\n    if(!profile.email || !profile.password){\n      closeCredentialsDialog();\n    }\n\n    setTimeout(() => setLoading(false), 700);\n  }, []);\n\n  function handleClick() {\n    emailContent[\"email\"] = profile.email;\n    emailContent[\"password\"] = profile.password;\n    emailContent[\"subject\"] = subjectRef.current.children[1].children[0].value;\n    emailContent[\"cc\"] = ccRef.current.children[1].children[0].value;\n    emailContent[\"bcc\"] = bccRef.current.children[1].children[0].value;\n    emailContent[\"recipients\"] =\n      recipientsRef.current.children[1].children[0].value;\n    emailContent[\"names\"] = namesRef.current.children[1].children[0].value;\n    emailContent[\"positions\"] =\n      positionsRef.current.children[1].children[0].value;\n    emailContent[\"message\"] = messageRef.current.children[1].children[0].value;\n\n    (async () => {\n      setLoading(true);\n      const error = await EmailService.sendEmail(JSON.stringify(emailContent));\n      setLoading(false);\n      if (!error.data) {\n        setErrorMessage(\n          \"One or more of your recipients' emails are invalid, please check them over before sending an email again\"\n        );\n        closeErrorDialog();\n      }\n      else{\n        closePromptDialog();\n      }\n    })();\n  }\n\n  function handleChange() {\n    let name = namesRef.current.children[1].children[0].value.split(\",\")[0];\n    let position =\n      positionsRef.current.children[1].children[0].value.split(\",\")[0];\n    let message = messageRef.current.children[1].children[0].value\n      .replace(\"{name}\", name)\n      .replace(\"{position}\", position);\n    previewRef.current.innerText = message;\n  }\n\n  function errorHandling() {\n    let subject = subjectRef.current.children[1].children[0].value;\n    let recipients = recipientsRef.current.children[1].children[0].value;\n    let message = messageRef.current.children[1].children[0].value;\n\n    if (subject === \"\" || recipients === \"\" || message === \"\") {\n      setErrorMessage(\n        \"One of the required fields have not been filled out, please complete them in order to send an email\"\n      );\n      setOpenError(!openError);\n    } else {\n      handleClick();\n    }\n  }\n\n  function openHelpDialog() {\n    setHelpOpen(!helpOpen);\n  }\n\n  function closeErrorDialog() {\n    setOpenError(!openError);\n  }\n\n  function closePromptDialog() {\n    setOpenPrompt(!openPrompt);\n  }\n\n  function closeCredentialsDialog() {\n    setOpenCredentials(!openCredentials);\n  }\n\n  function login(){\n    closeCredentialsDialog();\n    history.goBack();\n  }\n\n\n  return (\n    <div class=\"h-full\">\n      <div class=\"px-2\">\n        <CredentialsDialog open={openCredentials}>\n          <DialogTitle>Message</DialogTitle>\n          <DialogContent>\n            <Typography gutterBottom>Your email and password have been lost, please login again</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={login.bind(this)}>\n              Login\n            </Button>\n          </DialogActions>\n        </CredentialsDialog>\n\n        <PromptDialog open={openPrompt}>\n          <DialogTitle>Message</DialogTitle>\n          <DialogContent>\n            <Typography gutterBottom>Your emails have finished sending, would you like to send another batch?</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={closePromptDialog.bind(this)}>\n              No\n            </Button>\n            <Button color=\"primary\" onClick={closePromptDialog.bind(this)}>\n              Yes\n            </Button>\n          </DialogActions>\n        </PromptDialog>\n\n        <ErrorDialog open={openError}>\n          <DialogTitle>Error</DialogTitle>\n          <DialogContent>\n            <Typography gutterBottom>{errorMessage}</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={closeErrorDialog.bind(this)}>\n              Close\n            </Button>\n          </DialogActions>\n        </ErrorDialog>\n\n        <HelpDialog open={helpOpen}>\n          <DialogTitle>Guide</DialogTitle>\n          <Divider style={{ background: \"#7E7E7E\" }} />\n          <DialogContent style={{ whiteSpace: \"pre-line\" }} dividers>\n            <Typography variant=\"body1\" gutterBottom paragraph>\n              {intro}\n            </Typography>\n\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {fieldInfoTitle}\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom paragraph>\n              {fieldInfoDesc}\n            </Typography>\n\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {howTitle}\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom paragraph>\n              {howDesc}\n            </Typography>\n          </DialogContent>\n          <Divider style={{ background: \"#7E7E7E\" }} />\n          <DialogActions dividers>\n            <Button color=\"primary\" onClick={openHelpDialog.bind(this)}>\n              Close\n            </Button>\n          </DialogActions>\n        </HelpDialog>\n      </div>\n      {loading === false ? (\n        <div class=\"flex content-center p-5 grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\n          <div class=\"flex-none h-full px-2 py-2\">\n            <CustomCard>\n              <CardContent>\n                <div class=\"px-2\">\n                  <Title display=\"inline\" variant=\"h6\">\n                    Email Information\n                  </Title>\n                  <HelpIcon onClick={openHelpDialog.bind(this)} />\n                </div>\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        required\n                        ref={subjectRef}\n                        label=\"Subject\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={bccRef}\n                        label=\"BCC\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={ccRef}\n                        label=\"CC\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        required\n                        ref={recipientsRef}\n                        label=\"Recipients\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={namesRef}\n                        label=\"Names\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={positionsRef}\n                        label=\"Positions\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-5 px-2\">\n                      <InputField\n                        required\n                        ref={messageRef}\n                        onChange={handleChange.bind(this)}\n                        label=\"Message\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        multiline\n                        rows={10}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1 px-2 mt-6\">\n                  <ActionButton onClick={errorHandling.bind(this)}>\n                    Send Messages\n                  </ActionButton>\n                </div>\n              </CardContent>\n            </CustomCard>\n          </div>\n\n          <div class=\"flex-none h-full px-2 sm:grid-cols-1 py-2\">\n            <CustomCard>\n              <EmailPreview style={{ whiteSpace: \"pre-line\" }}>\n                <div class=\"px-2\">\n                  <Title variant=\"h6\">Email Preview</Title>\n                </div>\n                <div class=\"h-full flex flex-wrap content-center justify-center py-5\">\n                  <Text ref={previewRef}>Type a message to see me update</Text>\n                </div>\n              </EmailPreview>\n            </CustomCard>\n          </div>\n        </div>\n      ) : (\n        <div class=\"h-full flex flex-wrap content-center justify-center\">\n          <CircularProgress size={100} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Email;\n","import React, { useState} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UserProfile from \"./contexts/UserProfile\";\nimport Home from \"./components/home/Home\";\nimport Email from \"./components/email/Email\";\n\nconst App = () => {\n  const [profile, setProfile] = useState({});\n\n  return (\n    <div class=\"h-full\">\n      <UserProfile.Provider value={[profile, setProfile]}>\n        <Router>\n          <Switch>\n            <Route path=\"/email\">\n              <Email />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </UserProfile.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}