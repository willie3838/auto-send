{"version":3,"sources":["contexts/UserProfile.js","components/home/Materials.js","http-common.js","services/EmailService.js","components/home/Home.js","components/email/Materials.js","components/email/Email.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","React","createContext","Title","withStyles","root","color","Typography","LoginTextField","borderColor","TextField","LoginButton","backgroundColor","width","Button","ErrorDialog","Dialog","axios","create","baseURL","headers","emailContent","a","console","log","http","post","credentials","Home","history","useHistory","useContext","setProfile","useState","loading","setLoading","openError","setOpenError","usernameRef","createRef","passwordRef","openErrorDialog","useEffect","setTimeout","class","open","DialogTitle","DialogContent","gutterBottom","DialogActions","onClick","bind","noValidate","autoComplete","variant","ref","label","fullWidth","type","email","current","children","value","password","EmailService","authenticateEmail","data","push","CircularProgress","size","InputField","CustomCard","height","borderRadius","Card","ActionButton","EmailPreview","CardContent","Text","HelpIcon","marginLeft","marginBottom","Help","HelpDialog","Email","profile","errorMessage","setErrorMessage","subjectRef","ccRef","bccRef","recipientsRef","namesRef","positionsRef","messageRef","previewRef","helpOpen","setHelpOpen","openHelpDialog","Divider","style","background","whiteSpace","dividers","paragraph","display","required","onChange","name","split","position","message","replace","innerText","multiline","rows","subject","recipients","sendEmail","JSON","stringify","App","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e144bb21.chunk.js","sourcesContent":["import React from 'react';\n\nconst UserProfile = React.createContext([{}, () => {}]);\n\nexport default UserProfile;","import { Typography, Button, TextField, Dialog } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst Title = withStyles({\n    root: {\n      color: \"#7C3AED\"\n    }\n  })(Typography);\n\nconst LoginTextField = withStyles({\n    root: {\n      '& label.Mui-focused': {\n        color: '#7C3AED',\n      },\n      '& .MuiOutlinedInput-root': {\n\n        '& .MuiOutlinedInput-input':{\n          color: '#D1D5DB',\n        },\n        '& fieldset': {\n          borderColor: '#9CA3AF',\n        },\n        '&:hover fieldset': {\n          borderColor: '#D1D5DB',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#7C3AED',\n        },\n        \n      },\n      '& .MuiInputLabel-root': {\n        color: '#D1D5DB'\n      }\n\n    },\n  })(TextField);\n\nconst LoginButton = withStyles({\n    root:{\n      backgroundColor: '#7C3AED',\n      color: '#D1D5DB',\n      width: '100 px',\n\n      '&:hover':{\n        backgroundColor:'#4C1D95'\n      },\n    },\n  })(Button)\n\nconst ErrorDialog = withStyles({\n  root: {\n    \"& .MuiDialog-paper\":{\n      backgroundColor: \"#242424\",\n      color: \"#D1D5DB\",\n      width: \"50%\",\n    }\n  }\n})(Dialog);\n\nexport {\n    Title,\n    LoginTextField,\n    LoginButton,\n    ErrorDialog\n};","import axios from \"axios\"\n\nexport default axios.create({\n    baseURL: \"\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n})","import { resolveContent } from \"nodemailer/lib/shared\";\nimport http from \"../http-common\";\n\nclass EmailService {\n\n    async sendEmail(emailContent){\n        console.log(\"hello\")\n        return await http.post('/send', emailContent)\n    }\n\n    async authenticateEmail(credentials){\n        return await http.post('/authenticate', credentials)\n    }\n}\nexport default new EmailService;\n\n\n\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ErrorDialog, Title, LoginTextField, LoginButton } from \"./Materials\";\nimport {\n  CircularProgress,\n  Typography,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport UserProfile from \"../../contexts/UserProfile\";\nimport EmailService from \"../../services/EmailService\";\n\nconst Home = () => {\n  const history = useHistory();\n  const [profile, setProfile] = useContext(UserProfile);\n  const [loading, setLoading] = useState(true);\n  const [openError, setOpenError] = useState(false);\n  const usernameRef = React.createRef();\n  const passwordRef = React.createRef();\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 700);\n  },[])\n\n  function handleClick() {\n    let credentials = {\n      email: usernameRef.current.children[1].children[0].value,\n      password: passwordRef.current.children[1].children[0].value,\n    };\n    setProfile(credentials);\n\n    (async () => {\n      setLoading(true)\n      const authenticated = await EmailService.authenticateEmail(credentials);\n\n      if (authenticated.data) {\n        history.push(\"/email\");\n      } else {\n        setLoading(false)\n        openErrorDialog();\n        console.log(\"Incorrect credentials\");\n      }\n    })();\n  }\n\n  function openErrorDialog() {\n    setOpenError(!openError);\n  }\n\n  return (\n    <div class=\"h-full\">\n      <ErrorDialog open={openError}>\n        <DialogTitle>Error</DialogTitle>\n        <DialogContent>\n          <Typography gutterBottom>\n            Incorrect email or password, please try again\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={openErrorDialog.bind(this)}>\n            Close\n          </Button>\n        </DialogActions>\n      </ErrorDialog>\n      {loading === false ? (\n        <form\n          class=\"h-full flex flex-wrap content-center justify-center flex-col\"\n          noValidate\n          autoComplete=\"off\"\n        >\n          <div class=\"text-center\">\n            <Title variant=\"h2\">AutoSend</Title>\n          </div>\n          <div class=\"w-96 mt-5\">\n            <LoginTextField\n              ref={usernameRef}\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth={true}\n            />\n          </div>\n          <div class=\"w-96 mt-3\">\n            <LoginTextField\n              ref={passwordRef}\n              type=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth={true}\n            />\n          </div>\n\n          <div class=\"w-96 mt-3 text-right\">\n            <LoginButton onClick={handleClick.bind()} variant=\"contained\">\n              Login\n            </LoginButton>\n          </div>\n        </form>\n      ) : (\n        <div class=\"h-full flex flex-wrap content-center justify-center\">\n          <CircularProgress size={100} />\n        </div>\n        \n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { withStyles } from \"@material-ui/core/styles\";\nimport { Button, TextField, Card, CardContent, Typography, Dialog } from \"@material-ui/core\";\nimport Help from \"@material-ui/icons/Help\";\n\nconst InputField = withStyles({\n    root: {\n      \"& label.Mui-focused\": {\n        color: \"#7C3AED\",\n      },\n\n      \"& .MuiOutlinedInput-root\": {\n        \"& .MuiOutlinedInput-input\": {\n          color: \"#D1D5DB\",\n        },\n        \"& fieldset\": {\n          borderColor: \"#9CA3AF\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#D1D5DB\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#7C3AED\",\n        },\n        \"&.Mui-disabled fieldset\": {\n            borderColor: \"#9CA3AF\",\n        },\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"#D1D5DB\",\n      },\n      \n    },\n  })(TextField);\n\n  const CustomCard = withStyles({\n    root: {\n      backgroundColor: \"#242424\",\n      height: \"100%\",\n      borderRadius: \"15 px\",\n    },\n  })(Card);\n\n  const ActionButton = withStyles({\n    root: {\n      backgroundColor: \"#7C3AED\",\n      color: \"#D1D5DB\",\n      width: \"100 px\",\n\n      \"&:hover\": {\n        backgroundColor: \"#4C1D95\",\n      },\n    },\n  })(Button);\n\n  const Title = withStyles({\n    root: {\n      color: \"#7C3AED\"\n    }\n  })(Typography);\n\n  const EmailPreview = withStyles({\n      root: {\n          height: \"100%\",\n      }\n  })(CardContent);\n\n  const Text = withStyles({\n    root: {\n        color: \"#D1D5DB\"\n    }\n    })(Typography);\n  \n  const HelpIcon = withStyles({\n    root: {\n      color:\"#D1D5DB\",\n      marginLeft: \"5px\",\n      marginBottom: \"5px\",\n    }\n  })(Help);\n\n  const HelpDialog = withStyles({\n    root: {\n      \"& .MuiDialog-paper\":{\n        backgroundColor: \"#242424\",\n        color: \"#D1D5DB\",\n      }\n    }\n  })(Dialog);\n\n  const ErrorDialog = withStyles({\n    root: {\n      \"& .MuiDialog-paper\":{\n        backgroundColor: \"#242424\",\n        color: \"#D1D5DB\",\n        width: \"50%\",\n      }\n    }\n  })(Dialog);\n\n  export {\n      InputField,\n      CustomCard,\n      ActionButton,\n      Title,\n      Text,\n      HelpIcon,\n      EmailPreview,\n      HelpDialog,\n      ErrorDialog\n  }","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  CircularProgress,\n  CardContent,\n  Divider,\n  Typography,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport {\n  InputField,\n  CustomCard,\n  ActionButton,\n  Title,\n  Text,\n  EmailPreview,\n  HelpIcon,\n  HelpDialog,\n  ErrorDialog,\n} from \"./Materials\";\nimport EmailService from \"../../services/EmailService\";\nimport UserProfile from \"../../contexts/UserProfile\";\n\nconst Email = () => {\n  const [profile, setProfile] = useContext(UserProfile);\n  const [openError, setOpenError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const subjectRef = React.createRef();\n  const ccRef = React.createRef();\n  const bccRef = React.createRef();\n  const recipientsRef = React.createRef();\n  const namesRef = React.createRef();\n  const positionsRef = React.createRef();\n  const messageRef = React.createRef();\n  const previewRef = React.createRef();\n  const [helpOpen, setHelpOpen] = useState(false);\n\n  const intro = ` To get started make sure you input an email subject, the list of recipients, and the message you want to send.`;\n\n  const fieldInfoTitle = \"Field Information\";\n  const fieldInfoDesc = `- Recipients represents the emails of the people you want to send to\n  - Recipients represents the emails of the people you want to send to\n  - Names represents the names of the people you want to send to\n  - Positions represents the positions that the people applied for`;\n\n  const howTitle = \"Filling out Fields:\";\n  const howDesc = ` - If you plan to bcc/cc more than one person, make sure to separate their emails by a comma \n  (Example: jane.doe@gmail.com, testing@gmail.com)\n\n  - Recipients, names, and position should also be separated by a comma if there are several people. Make sure you list them out in the same order\n  (Example:\n   Recipients: jane.doe@gmail.com, john@gmail.com\n   Names: Jane, John\n   Position: Cookie, Monster)`;\n\n  let emailContent = {};\n\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 700);\n  }, []);\n\n  function handleClick() {\n    emailContent[\"email\"] = profile.email;\n    emailContent[\"password\"] = profile.password;\n    emailContent[\"subject\"] = subjectRef.current.children[1].children[0].value;\n    emailContent[\"cc\"] = ccRef.current.children[1].children[0].value;\n    emailContent[\"bcc\"] = bccRef.current.children[1].children[0].value;\n    emailContent[\"recipients\"] =\n      recipientsRef.current.children[1].children[0].value;\n    emailContent[\"names\"] = namesRef.current.children[1].children[0].value;\n    emailContent[\"positions\"] =\n      positionsRef.current.children[1].children[0].value;\n    emailContent[\"message\"] = messageRef.current.children[1].children[0].value;\n\n    (async () => {\n      setLoading(true);\n      const error = await EmailService.sendEmail(JSON.stringify(emailContent));\n      if (!error.data) {\n        setLoading(false);\n        setErrorMessage(\n          \"One or more of your recipients' emails are invalid, please check them over before sending an email again\"\n        );\n        setOpenError(!openError);\n      }\n    })();\n  }\n\n  function handleChange() {\n    let name = namesRef.current.children[1].children[0].value.split(\",\")[0];\n    let position =\n      positionsRef.current.children[1].children[0].value.split(\",\")[0];\n    let message = messageRef.current.children[1].children[0].value\n      .replace(\"{name}\", name)\n      .replace(\"{position}\", position);\n    previewRef.current.innerText = message;\n  }\n\n  function errorHandling() {\n    let subject = subjectRef.current.children[1].children[0].value;\n    let recipients = recipientsRef.current.children[1].children[0].value;\n    let message = messageRef.current.children[1].children[0].value;\n\n    if (subject === \"\" || recipients === \"\" || message === \"\") {\n      setErrorMessage(\n        \"One of the required fields have not been filled out, please complete them in order to send an email\"\n      );\n      setOpenError(!openError);\n    } else {\n      handleClick();\n    }\n  }\n\n  function openHelpDialog() {\n    setHelpOpen(!helpOpen);\n  }\n\n  function closeErrorDialog() {\n    setOpenError(!openError);\n  }\n\n  return (\n    <div class=\"h-full\">\n      <div class=\"px-2\">\n        <ErrorDialog open={openError}>\n          <DialogTitle>Error</DialogTitle>\n          <DialogContent>\n            <Typography gutterBottom>{errorMessage}</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={closeErrorDialog.bind(this)}>\n              Close\n            </Button>\n          </DialogActions>\n        </ErrorDialog>\n\n        <HelpDialog open={helpOpen}>\n          <DialogTitle>Guide</DialogTitle>\n          <Divider style={{ background: \"#7E7E7E\" }} />\n          <DialogContent style={{ whiteSpace: \"pre-line\" }} dividers>\n            <Typography variant=\"body1\" gutterBottom paragraph>\n              {intro}\n            </Typography>\n\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {fieldInfoTitle}\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom paragraph>\n              {fieldInfoDesc}\n            </Typography>\n\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {howTitle}\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom paragraph>\n              {howDesc}\n            </Typography>\n          </DialogContent>\n          <Divider style={{ background: \"#7E7E7E\" }} />\n          <DialogActions dividers>\n            <Button color=\"primary\" onClick={openHelpDialog.bind(this)}>\n              Close\n            </Button>\n          </DialogActions>\n        </HelpDialog>\n      </div>\n      {loading === false ? (\n        <div class=\"flex content-center p-5 grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\n          <div class=\"flex-none h-full px-2 py-2\">\n            <CustomCard>\n              <CardContent>\n                <div class=\"px-2\">\n                  <Title display=\"inline\" variant=\"h6\">\n                    Email Information\n                  </Title>\n                  <HelpIcon onClick={openHelpDialog.bind(this)} />\n                </div>\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        required\n                        ref={subjectRef}\n                        label=\"Subject\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={bccRef}\n                        label=\"BCC\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={ccRef}\n                        label=\"CC\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        required\n                        ref={recipientsRef}\n                        label=\"Recipients\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={namesRef}\n                        label=\"Names\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-6 px-2\">\n                      <InputField\n                        ref={positionsRef}\n                        label=\"Positions\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1\">\n                  <form noValidate autoComplete=\"off\">\n                    <div class=\"mt-5 px-2\">\n                      <InputField\n                        required\n                        ref={messageRef}\n                        onChange={handleChange.bind(this)}\n                        label=\"Message\"\n                        variant=\"outlined\"\n                        fullWidth={true}\n                        multiline\n                        rows={10}\n                      ></InputField>\n                    </div>\n                  </form>\n                </div>\n\n                <div class=\"grid grid-cols-1 px-2 mt-6\">\n                  <ActionButton onClick={errorHandling.bind(this)}>\n                    Send Messages\n                  </ActionButton>\n                </div>\n              </CardContent>\n            </CustomCard>\n          </div>\n\n          <div class=\"flex-none h-full px-2 sm:grid-cols-1 py-2\">\n            <CustomCard>\n              <EmailPreview style={{ whiteSpace: \"pre-line\" }}>\n                <div class=\"px-2\">\n                  <Title variant=\"h6\">Email Preview</Title>\n                </div>\n                <div class=\"h-full flex flex-wrap content-center justify-center py-5\">\n                  <Text ref={previewRef}>Type a message to see me update</Text>\n                </div>\n              </EmailPreview>\n            </CustomCard>\n          </div>\n        </div>\n      ) : (\n        <div class=\"h-full flex flex-wrap content-center justify-center\">\n          <CircularProgress size={100} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Email;\n","import React, { useState} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UserProfile from \"./contexts/UserProfile\";\nimport Home from \"./components/home/Home\";\nimport Email from \"./components/email/Email\";\n\nconst App = () => {\n  const [profile, setProfile] = useState({});\n\n  return (\n    <div class=\"h-full\">\n      <UserProfile.Provider value={[profile, setProfile]}>\n        <Router>\n          <Switch>\n            <Route path=\"/email\">\n              <Email />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </UserProfile.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}